{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GACTC,KAAKC,Q,CAO7BC,SAASC,KAAKC,MAAMC,gBAAkB,UACtC,MAAMC,EAAOJ,SAASK,cAAc,aAC9BC,EAAU,CACdV,SAAU,gBACVW,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,cAKrB,SAAShB,EAAcC,EAAUC,GAC/B,OAAO,IAAIe,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBjB,KAAKC,SAAW,GACtCiB,YAAW,KACLD,EACFF,EAAQ,C,SAAEjB,E,MAAUC,IAEpBiB,EAAO,C,SAAElB,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbO,EAAKa,iBAAiB,SAetB,SAAyBC,GACvBA,EAAEC,iBACF,MAAQtB,MAAAuB,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAChD,IAAIC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCL,GAAcG,EAEdjC,EAAcmC,EAAGL,GACdM,MAAK,EAACnC,SAAEA,EAAQC,MAAEA,MACjBmC,OAAOC,QACL,uBAAqBrC,QAAiBC,MAAWS,EAC/C,IAGL4B,OAAM,EAACtC,SAAEA,EAAQC,MAAEA,MAClBmC,OAAOG,QACL,sBAAoBvC,QAAeC,MAAWS,EAC9C,IAGNY,EAAEK,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\ndocument.body.style.backgroundColor = '#f7eff4';\nconst form = document.querySelector('form.form');\nconst options = {\n  position: 'center-bottom',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 10000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n};\n\nform.addEventListener('click', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseCreate(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    inputDelay += inputStep;\n\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          options\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          options\n        );\n      });\n    e.currentTarget.reset();\n  }\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Math","random","document","body","style","backgroundColor","$47d4ff9957288465$var$form","querySelector","$47d4ff9957288465$var$options","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","Promise","resolve","reject","shouldResolve","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","elements","inputDelay","Number","value","inputStep","inputAmount","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.394b9819.js.map"}